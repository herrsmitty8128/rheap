window.SIDEBAR_ITEMS = {"enum":[["ErrorKind","An enum containing the types of errors that a heap might encounter."],["HeapType","An enum used to indicate whether a heap is a minimum or maximum heap. It is your responsibility use the same HeapType when calling different functions for the same heap."]],"fn":[["extract","Removes the element from the top of the heap. Returns None if the heap is empty."],["find","Performs a linear search to find the index of an element on the heap. Returns None if the element was not found."],["heap_sort","Performs an in-place heap sort."],["insert","Inserts an element into the heap."],["remove","Removes and returns the element at index. Returns an error if the heap is empty or if the index is out of bounds."],["sort_down","Sorts the heap by iterating down the tree starting at index."],["sort_up","Sorts the heap by iterating up the tree starting at index."],["update","Updates the value of the element at index. Returns and error if the element is not found in the heap or the index is out of bounds."]],"struct":[["Error","The error type used by a heap."],["MaxHeap","A complete binary tree in which the value of each node in the tree is greater than the value of each of its children. As a consequence, the largest value in the tree is always located at the root of the tree."],["MinHeap","A complete binary tree in which the value of each node in the tree is less than the value of each of its children. As a consequence, the smallest value in the tree is always located at the root of the tree."]],"trait":[["Heap","Trait that describes a minimum or maximum heap."]],"type":[["Result","A specialized result type to make error handling simpler."]]};